<?xml version="1.0" encoding="utf-8"?>
<!--
     Copyright (C)2022-2023 The Superior OS Project
     SPDX-License-Identifier: Apache-2.0
-->
<resources>
    <!-- The list of components which should be automatically disabled for a specific device.
         Note: this MUST not be used to randomly disable components, ask for approval first! -->
    <string-array name="config_deviceDisabledComponents" translatable="false">
    </string-array>

    <!-- The list of components which should be automatically disabled for all devices. -->
    <string-array name="config_globallyDisabledComponents" translatable="false">
    </string-array>

    <!-- The list of components which should be forced to be enabled. -->
    <string-array name="config_forceEnabledComponents" translatable="false">
    </string-array>

    <!-- Define device configs on boot -->
    <string-array name="global_device_configs_override" translatable="false">
    </string-array>
    <string-array name="device_configs_override" translatable="false">
    </string-array>

    <!-- The list of package IDs that are allowed to skip camera high frame rate checks. -->
    <string-array name="config_cameraHFRPrivAppList" translatable="false" />

    <!-- The list of package IDs that are allowed to use aux cameras.
         NOTE: If this list is empty then all apps will be able to use aux cameras. -->
    <string-array name="config_cameraAuxPackageAllowList" translatable="false" />

    <!-- The list of package IDs that are not allowed to use aux cameras. -->
    <string-array name="config_cameraAuxPackageExcludeList" translatable="false" />

    <!-- Paths to the libraries that contain device specific key handlers -->
    <string-array name="config_deviceKeyHandlerLibs" translatable="false">
        <item>/system/system_ext/priv-app/TouchGestures/TouchGestures.apk</item>
    </string-array>

    <!-- Names of the key handler classes -->
    <string-array name="config_deviceKeyHandlerClasses" translatable="false">
        <item>com.android.touch.gestures.KeyHandler</item>
    </string-array>

    <!-- Name of a font family to use as light font. For theming purpose. -->
    <string name="config_lightFontFamily" translatable="false">sans-serif-light</string>

    <!-- Name of a font family to use as regular font. For theming purpose. -->
    <string name="config_regularFontFamily" translatable="false">sans-serif-regular</string>

    <!-- Whether to cleanup fingerprints upon connection to the daemon and when user switches -->
    <bool name="config_cleanupUnusedFingerprints">true</bool>

    <!-- Whether to cancel fingerprint operation if not idle -->
    <bool name="config_fpCancelIfNotIdle">false</bool>

     <!-- Whether to use Richtap vibration -->
     <bool name="config_usesRichtapVibration">false</bool>

    <!-- Whether or not we should show vendor mismatch message -->
    <bool name="config_show_vendor_mismatch_message">false</bool>

    <!-- Default value for proximity check on screen wake
     NOTE ! - Enable for devices that have a fast response proximity sensor (ideally < 300ms)-->
    <bool name="config_proximityCheckOnWake">false</bool>
    <integer name="config_proximityCheckTimeout">250</integer>
    <bool name="config_proximityCheckOnWakeEnabledByDefault">false</bool>

    <!-- Global Actions prefs list -->
    <string-array translatable="false" name="custom_config_globalActionsList">
        <item>emergency</item>
        <item>power</item>
        <item>restart</item>
        <item>advanced</item>
        <item>logout</item>
        <item>users</item>
        <item>silent</item>
        <item>screenshot</item>
        <item>airplane</item>
        <item>settings</item>
        <item>lockdown</item>
    </string-array>    

    <!-- Should we listen for fingerprints when the screen is off?  Devices
         with a rear-mounted sensor want this, but certain devices have
         the sensor embedded in the power key and listening all the time
         causes a poor experience. -->
    <bool name="config_fingerprintWakeAndUnlock">true</bool>

    <!-- Button backlight control. Possible values are:
            0 - Not supported
            1 - Supported, but only on/off mode
            2 - Supported with variable brightness control
    -->
    <integer name="config_deviceSupportsButtonBrightnessControl">0</integer>
    <dimen name="config_buttonBrightnessSettingDefaultFloat">1.0</dimen>

    <!-- Keyboard backlight control. Possible values are:
            0 - Not supported
            1 - Supported, but only on/off mode
            2 - Supported with variable brightness control
    -->
    <integer name="config_deviceSupportsKeyboardBrightnessControl">0</integer>
    <dimen name="config_keyboardBrightnessSettingDefaultFloat">1.0</dimen>

  <!-- Hardware keys present on the device, stored as a bit field.
       This integer should equal the sum of the corresponding value for each
       of the following keys present:
           1 - Home
           2 - Back
           4 - Menu
           8 - Assistant (search)
          16 - App switch
          32 - Camera
          64 - Volume rocker
       For example, a device with Home, Back and Menu keys would set this
       config to 7. -->
  <integer name="config_deviceHardwareKeys">64</integer>

  <!-- Hardware keys present on the device with the ability to wake, stored as a bit field.
       This integer should equal the sum of the corresponding value for each
       of the following keys present:
           1 - Home
           2 - Back
           4 - Menu
           8 - Assistant (search)
          16 - App switch
          32 - Camera
          64 - Volume rocker
       For example, a device with Home, Back and Menu keys would set this
       config to 7. -->
  <integer name="config_deviceHardwareWakeKeys">64</integer>

  <!-- Control the behavior when the user long presses the home button.
       This needs to match the enums in
       frameworks/base/core/java/com/android/internal/util/derp/hwkeys/DeviceKeysConstants.java.
  -->
  <integer name="config_longPressOnHomeBehavior">3</integer>
  <!-- Control the behavior when the user double-taps the home button.
       This needs to match the enums in
       frameworks/base/core/java/com/android/internal/util/derp/hwkeys/DeviceKeysConstants.java.
  -->
  <integer name="config_doubleTapOnHomeBehavior">0</integer>
  <!-- Control the behavior when the user long presses the menu button.
       This needs to match the enums in
       frameworks/base/core/java/com/android/internal/util/derp/hwkeys/DeviceKeysConstants.java.
  -->
  <integer name="config_longPressOnMenuBehavior">2</integer>
  <!-- Control the behavior when the user long presses the app switch button.
       This needs to match the enums in
       frameworks/base/core/java/com/android/internal/util/derp/hwkeys/DeviceKeysConstants.java.
  -->
  <integer name="config_longPressOnAppSwitchBehavior">0</integer>

</resources>
